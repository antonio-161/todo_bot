import asyncpg
import asyncio
from pathlib import Path
from config import (
    INIT_DB_USER,
    INIT_DB_PASS,
    INIT_DB_HOST,
    INIT_DB_PORT,
    INIT_DB_NAME,
    validate_init_config
)


async def run_init_sql():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ SQL-—Å–∫—Ä–∏–ø—Ç–∞"""
    try:
        # –í–∞–ª–∏–¥–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        validate_init_config()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ SQL-—Ñ–∞–π–ª–∞
        sql_file = Path("init_db.sql")
        if not sql_file.exists():
            print("‚ùå –§–∞–π–ª init_db.sql –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False

        # –ß–∏—Ç–∞–µ–º SQL-—Å–∫—Ä–∏–ø—Ç
        with open(sql_file, "r", encoding="utf-8") as f:
            sql_script = f.read()

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        print(
            f"üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î {INIT_DB_NAME} "
            f"–Ω–∞ {INIT_DB_HOST}:{INIT_DB_PORT}"
        )
        conn = await asyncpg.connect(
            user=INIT_DB_USER,
            password=INIT_DB_PASS,
            database=INIT_DB_NAME,
            host=INIT_DB_HOST,
            port=INIT_DB_PORT
        )

        try:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
            table_exists = await conn.fetchval("""
                SELECT EXISTS (
                    SELECT FROM information_schema.tables
                    WHERE table_schema = 'public' AND table_name = 'tasks'
                );
            """)

            if table_exists:
                print(
                    "‚ÑπÔ∏è –¢–∞–±–ª–∏—Ü–∞ 'tasks' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. "
                    "–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è."
                )
                return True
            else:
                # –í—ã–ø–æ–ª–Ω—è–µ–º —Å–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
                await conn.execute(sql_script)
                print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.")
                return True

        finally:
            await conn.close()
            print("üîí –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –ë–î –∑–∞–∫—Ä—ã—Ç–æ")

    except asyncpg.PostgresError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ PostgreSQL: {e}")
        return False
    except ValueError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False


if __name__ == "__main__":
    success = asyncio.run(run_init_sql())
    exit(0 if success else 1)
